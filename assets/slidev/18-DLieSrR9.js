import{I as _}from"./default-BiAZGAXa.js";import{_ as f,ap as c}from"../index-DdraXkq5.js";import{p,u,f as g}from"./context-B1Lq7m_7.js";import{o as x,c as v,k,q as y,s as $,e,a6 as t}from"../modules/vue-Z6Fy-qlH.js";import"../modules/shiki-Dfij_pE2.js";const b={__name:"18",setup(i,{expose:r}){r(),p(c);const{$slidev:o,$nav:a,$clicksContext:s,$clicks:n,$page:m,$renderContext:d,$frontmatter:h}=u(),l={$slidev:o,$nav:a,$clicksContext:s,$clicks:n,$page:m,$renderContext:d,$frontmatter:h,InjectedLayout:_,get frontmatter(){return c},get useSlideContext(){return u},get _provideFrontmatter(){return p},get _frontmatterToProps(){return g}};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}},S=e("div",{class:"dense"},[e("h1",null,"Step 3: Executable schema ğŸ’»"),e("p",null,[t("The "),e("code",null,"@graphql-tools/schema"),t(" package allows you to create a GraphQL.js "),e("a",{href:"https://graphql.org/graphql-js/type/",target:"_blank"},"GraphQLSchema"),t(" instance from GraphQL schema language using the function "),e("code",null,"makeExecutableSchema"),t(".")]),e("p",null,[t("Besides common options such as "),e("code",null,"typeDefs"),t(" and "),e("code",null,"resolvers"),t(", it supports more advanced options to customize the creation of the schema.")]),e("ul",null,[e("li",null,[t("Create an executable schema using "),e("code",null,"typeDefs"),t(" and "),e("code",null,"resolvers")]),e("li",null,[t("Use the "),e("code",null,"@graphql-tools/schema"),t(" package to create the executable schema")]),e("li",null,'Implement the same "add" functionality as in the earlier step')])],-1);function C(i,r,o,a,s,n){return x(),v(a.InjectedLayout,y($(a._frontmatterToProps(a.frontmatter,17))),{default:k(()=>[S]),_:1},16)}const B=f(b,[["render",C],["__file","/@slidev/slides/18.md"]]);export{B as default};
